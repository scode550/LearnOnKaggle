{"metadata":{"jupytext":{"cell_metadata_filter":"-all","formats":"ipynb"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":1480608,"sourceType":"datasetVersion","datasetId":829369}],"dockerImageVersionId":30648,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"**This notebook is an exercise in the [Intro to Deep Learning](https://www.kaggle.com/learn/intro-to-deep-learning) course.  You can reference the tutorial at [this link](https://www.kaggle.com/ryanholbrook/dropout-and-batch-normalization).**\n\n---\n","metadata":{}},{"cell_type":"markdown","source":"# Introduction #\n\nIn this exercise, you'll add dropout to the *Spotify* model from Exercise 4 and see how batch normalization can let you successfully train models on difficult datasets.\n\nRun the next cell to get started!","metadata":{}},{"cell_type":"code","source":"# Setup plotting\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn-whitegrid')\n# Set Matplotlib defaults\nplt.rc('figure', autolayout=True)\nplt.rc('axes', labelweight='bold', labelsize='large',\n       titleweight='bold', titlesize=18, titlepad=10)\nplt.rc('animation', html='html5')\n\n# Setup feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.deep_learning_intro.ex5 import *","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:46:30.233260Z","iopub.execute_input":"2024-07-22T12:46:30.234147Z","iopub.status.idle":"2024-07-22T12:46:30.764773Z","shell.execute_reply.started":"2024-07-22T12:46:30.234094Z","shell.execute_reply":"2024-07-22T12:46:30.763687Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_34/195640296.py:3: MatplotlibDeprecationWarning: The seaborn styles shipped by Matplotlib are deprecated since 3.6, as they no longer correspond to the styles shipped by seaborn. However, they will remain available as 'seaborn-v0_8-<style>'. Alternatively, directly use the seaborn API instead.\n  plt.style.use('seaborn-whitegrid')\n","output_type":"stream"}]},{"cell_type":"markdown","source":"First load the *Spotify* dataset.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.compose import make_column_transformer\nfrom sklearn.model_selection import GroupShuffleSplit\n\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras import callbacks\n\nspotify = pd.read_csv('../input/dl-course-data/spotify.csv')\n\nX = spotify.copy().dropna()\ny = X.pop('track_popularity')\nartists = X['track_artist']\n\nfeatures_num = ['danceability', 'energy', 'key', 'loudness', 'mode',\n                'speechiness', 'acousticness', 'instrumentalness',\n                'liveness', 'valence', 'tempo', 'duration_ms']\nfeatures_cat = ['playlist_genre']\n\npreprocessor = make_column_transformer(\n    (StandardScaler(), features_num),\n    (OneHotEncoder(), features_cat),\n)\n\ndef group_split(X, y, group, train_size=0.75):\n    splitter = GroupShuffleSplit(train_size=train_size)\n    train, test = next(splitter.split(X, y, groups=group))\n    return (X.iloc[train], X.iloc[test], y.iloc[train], y.iloc[test])\n\nX_train, X_valid, y_train, y_valid = group_split(X, y, artists)\n\nX_train = preprocessor.fit_transform(X_train)\nX_valid = preprocessor.transform(X_valid)\ny_train = y_train / 100\ny_valid = y_valid / 100\n\ninput_shape = [X_train.shape[1]]\nprint(\"Input shape: {}\".format(input_shape))","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:47:03.142599Z","iopub.execute_input":"2024-07-22T12:47:03.143513Z","iopub.status.idle":"2024-07-22T12:47:16.793614Z","shell.execute_reply.started":"2024-07-22T12:47:03.143482Z","shell.execute_reply":"2024-07-22T12:47:16.792591Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stderr","text":"2024-07-22 12:47:05.361129: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-07-22 12:47:05.361230: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-07-22 12:47:05.473765: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"},{"name":"stdout","text":"Input shape: [18]\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# 1) Add Dropout to Spotify Model\n\nHere is the last model from Exercise 4. Add two dropout layers, one after the `Dense` layer with 128 units, and one after the `Dense` layer with 64 units. Set the dropout rate on both to `0.3`.","metadata":{}},{"cell_type":"code","source":"# YOUR CODE HERE: Add two 30% dropout layers, one after 128 and one after 64\nmodel = keras.Sequential([\n    layers.Dense(128, activation='relu', input_shape=input_shape),\n    layers.Dropout(rate=0.3),\n    layers.Dense(64, activation='relu'),\n    layers.Dropout(rate=0.3),\n    layers.Dense(1)\n])\n\n# Check your answer\nq_1.check()","metadata":{"lines_to_next_cell":2,"execution":{"iopub.status.busy":"2024-07-22T12:49:02.085935Z","iopub.execute_input":"2024-07-22T12:49:02.086357Z","iopub.status.idle":"2024-07-22T12:49:02.839504Z","shell.execute_reply.started":"2024-07-22T12:49:02.086327Z","shell.execute_reply":"2024-07-22T12:49:02.838541Z"},"trusted":true},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.25, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"1_Q1\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}]},{"cell_type":"code","source":"# Lines below will give you a hint or solution code\n#q_1.hint()\n#q_1.solution()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Now run this next cell to train the model see the effect of adding dropout.","metadata":{}},{"cell_type":"code","source":"model.compile(\n    optimizer='adam',\n    loss='mae',\n)\nhistory = model.fit(\n    X_train, y_train,\n    validation_data=(X_valid, y_valid),\n    batch_size=512,\n    epochs=50,\n    verbose=0,\n)\nhistory_df = pd.DataFrame(history.history)\nhistory_df.loc[:, ['loss', 'val_loss']].plot()\nprint(\"Minimum Validation Loss: {:0.4f}\".format(history_df['val_loss'].min()))","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:49:09.208161Z","iopub.execute_input":"2024-07-22T12:49:09.208507Z","iopub.status.idle":"2024-07-22T12:49:21.787722Z","shell.execute_reply.started":"2024-07-22T12:49:09.208481Z","shell.execute_reply":"2024-07-22T12:49:21.786700Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stderr","text":"WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nI0000 00:00:1721652552.121794     151 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n","output_type":"stream"},{"name":"stdout","text":"Minimum Validation Loss: 0.1918\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# 2) Evaluate Dropout\n\nRecall from Exercise 4 that this model tended to overfit the data around epoch 5. Did adding dropout seem to help prevent overfitting this time?","metadata":{}},{"cell_type":"code","source":"# View the solution (Run this cell to receive credit!)\nq_2.check()","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:49:36.280569Z","iopub.execute_input":"2024-07-22T12:49:36.281418Z","iopub.status.idle":"2024-07-22T12:49:36.289367Z","shell.execute_reply.started":"2024-07-22T12:49:36.281389Z","shell.execute_reply":"2024-07-22T12:49:36.288383Z"},"trusted":true},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.25, \"interactionType\": 1, \"questionType\": 4, \"questionId\": \"2_Q2\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct: \n\n\nFrom the learning curves, you can see that the validation loss remains near a constant minimum even though the training loss continues to decrease. So we can see that adding dropout did prevent overfitting this time. Moreover, by making it harder for the network to fit spurious patterns, dropout may have encouraged the network to seek out more of the true patterns, possibly improving the validation loss some as well).","text/markdown":"<span style=\"color:#33cc33\">Correct:</span> \n\n\nFrom the learning curves, you can see that the validation loss remains near a constant minimum even though the training loss continues to decrease. So we can see that adding dropout did prevent overfitting this time. Moreover, by making it harder for the network to fit spurious patterns, dropout may have encouraged the network to seek out more of the true patterns, possibly improving the validation loss some as well).\n"},"metadata":{}}]},{"cell_type":"markdown","source":"Now, we'll switch topics to explore how batch normalization can fix problems in training.\n\nLoad the *Concrete* dataset. We won't do any standardization this time. This will make the effect of batch normalization much more apparent.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\n\nconcrete = pd.read_csv('../input/dl-course-data/concrete.csv')\ndf = concrete.copy()\n\ndf_train = df.sample(frac=0.7, random_state=0)\ndf_valid = df.drop(df_train.index)\n\nX_train = df_train.drop('CompressiveStrength', axis=1)\nX_valid = df_valid.drop('CompressiveStrength', axis=1)\ny_train = df_train['CompressiveStrength']\ny_valid = df_valid['CompressiveStrength']\n\ninput_shape = [X_train.shape[1]]","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:50:11.813560Z","iopub.execute_input":"2024-07-22T12:50:11.813961Z","iopub.status.idle":"2024-07-22T12:50:11.834162Z","shell.execute_reply.started":"2024-07-22T12:50:11.813929Z","shell.execute_reply":"2024-07-22T12:50:11.833343Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":"Run the following cell to train the network on the unstandardized *Concrete* data.","metadata":{}},{"cell_type":"code","source":"model = keras.Sequential([\n    layers.Dense(512, activation='relu', input_shape=input_shape),\n    layers.Dense(512, activation='relu'),    \n    layers.Dense(512, activation='relu'),\n    layers.Dense(1),\n])\nmodel.compile(\n    optimizer='sgd', # SGD is more sensitive to differences of scale\n    loss='mae',\n    metrics=['mae'],\n)\nhistory = model.fit(\n    X_train, y_train,\n    validation_data=(X_valid, y_valid),\n    batch_size=64,\n    epochs=100,\n    verbose=0,\n)\n\nhistory_df = pd.DataFrame(history.history)\nhistory_df.loc[0:, ['loss', 'val_loss']].plot()\nprint((\"Minimum Validation Loss: {:0.4f}\").format(history_df['val_loss'].min()))","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:50:34.376785Z","iopub.execute_input":"2024-07-22T12:50:34.377613Z","iopub.status.idle":"2024-07-22T12:50:41.964639Z","shell.execute_reply.started":"2024-07-22T12:50:34.377584Z","shell.execute_reply":"2024-07-22T12:50:41.963736Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"Minimum Validation Loss: nan\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"Did you end up with a blank graph? Trying to train this network on this dataset will usually fail. Even when it does converge (due to a lucky weight initialization), it tends to converge to a very large number.\n\n# 3) Add Batch Normalization Layers\n\nBatch normalization can help correct problems like this.\n\nAdd four `BatchNormalization` layers, one before each of the dense layers. (Remember to move the `input_shape` argument to the new first layer.)","metadata":{}},{"cell_type":"code","source":"# YOUR CODE HERE: Add a BatchNormalization layer before each Dense layer\nmodel = keras.Sequential([\n    layers.BatchNormalization(),\n    layers.Dense(512, activation='relu', input_shape=input_shape),\n    layers.BatchNormalization(),\n    layers.Dense(512, activation='relu'),\n    layers.BatchNormalization(),\n    layers.Dense(512, activation='relu'),\n    layers.BatchNormalization(),\n    layers.Dense(1),\n])\n\n# Check your answer\nq_3.check()","metadata":{"lines_to_next_cell":0,"execution":{"iopub.status.busy":"2024-07-22T12:54:13.841570Z","iopub.execute_input":"2024-07-22T12:54:13.842201Z","iopub.status.idle":"2024-07-22T12:54:13.893608Z","shell.execute_reply.started":"2024-07-22T12:54:13.842151Z","shell.execute_reply":"2024-07-22T12:54:13.892147Z"},"trusted":true},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.25, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"3_Q3\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}]},{"cell_type":"code","source":"# Lines below will give you a hint or solution code\n#q_3.hint()\n#q_3.solution()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Run the next cell to see if batch normalization will let us train the model.","metadata":{}},{"cell_type":"code","source":"model.compile(\n    optimizer='sgd',\n    loss='mae',\n    metrics=['mae'],\n)\nEPOCHS = 100\nhistory = model.fit(\n    X_train, y_train,\n    validation_data=(X_valid, y_valid),\n    batch_size=64,\n    epochs=EPOCHS,\n    verbose=0,\n)\n\nhistory_df = pd.DataFrame(history.history)\nhistory_df.loc[0:, ['loss', 'val_loss']].plot()\nprint((\"Minimum Validation Loss: {:0.4f}\").format(history_df['val_loss'].min()))","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:54:19.814554Z","iopub.execute_input":"2024-07-22T12:54:19.815000Z","iopub.status.idle":"2024-07-22T12:54:32.274478Z","shell.execute_reply.started":"2024-07-22T12:54:19.814956Z","shell.execute_reply":"2024-07-22T12:54:32.273602Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"Minimum Validation Loss: 3.9136\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# 4) Evaluate Batch Normalization\n\nDid adding batch normalization help?","metadata":{}},{"cell_type":"code","source":"# View the solution (Run this cell to receive credit!)\nq_4.check()","metadata":{"lines_to_next_cell":0,"execution":{"iopub.status.busy":"2024-07-22T12:54:47.434835Z","iopub.execute_input":"2024-07-22T12:54:47.435479Z","iopub.status.idle":"2024-07-22T12:54:47.443266Z","shell.execute_reply.started":"2024-07-22T12:54:47.435449Z","shell.execute_reply":"2024-07-22T12:54:47.442333Z"},"trusted":true},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.25, \"interactionType\": 1, \"questionType\": 4, \"questionId\": \"4_Q4\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct: \n\n\nYou can see that adding batch normalization was a big improvement on the first attempt! By adaptively scaling the data as it passes through the network, batch normalization can let you train models on difficult datasets.","text/markdown":"<span style=\"color:#33cc33\">Correct:</span> \n\n\nYou can see that adding batch normalization was a big improvement on the first attempt! By adaptively scaling the data as it passes through the network, batch normalization can let you train models on difficult datasets.\n"},"metadata":{}}]},{"cell_type":"markdown","source":"# Keep Going #\n\n[**Create neural networks**](https://www.kaggle.com/ryanholbrook/binary-classification) for binary classification.","metadata":{}},{"cell_type":"markdown","source":"---\n\n\n\n\n*Have questions or comments? Visit the [course discussion forum](https://www.kaggle.com/learn/intro-to-deep-learning/discussion) to chat with other learners.*","metadata":{}}]}